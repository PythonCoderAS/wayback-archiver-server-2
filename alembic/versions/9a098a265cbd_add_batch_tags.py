"""Add batch tags

Revision ID: 9a098a265cbd
Revises: f79ac07ca876
Create Date: 2024-01-17 15:29:50.515286

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "9a098a265cbd"
down_revision: Union[str, None] = "f79ac07ca876"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "batch_tags",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_batch_tags_name"), "batch_tags", ["name"], unique=True)
    op.create_table(
        "batch_tag_batches",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("batch_id", sa.Integer(), nullable=False),
        sa.Column("batch_tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["batch_id"],
            ["batches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["batch_tag_id"],
            ["batch_tags.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("batch_id", "batch_tag_id", name="_batch_batch_tag_uc"),
    )
    op.create_index(
        op.f("ix_batch_tag_batches_batch_id"),
        "batch_tag_batches",
        ["batch_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_batch_tag_batches_batch_tag_id"),
        "batch_tag_batches",
        ["batch_tag_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_batches_created_at"), "batches", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_jobs_completed"), "jobs", ["completed"], unique=False)
    op.create_index(op.f("ix_jobs_created_at"), "jobs", ["created_at"], unique=False)
    op.create_index(
        op.f("ix_jobs_delayed_until"), "jobs", ["delayed_until"], unique=False
    )
    op.create_index(op.f("ix_jobs_failed"), "jobs", ["failed"], unique=False)
    op.create_index(
        op.f("ix_repeat_urls_created_at"), "repeat_urls", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_urls_first_seen"), "urls", ["first_seen"], unique=False)
    op.create_index(op.f("ix_urls_last_seen"), "urls", ["last_seen"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_urls_last_seen"), table_name="urls")
    op.drop_index(op.f("ix_urls_first_seen"), table_name="urls")
    op.drop_index(op.f("ix_repeat_urls_created_at"), table_name="repeat_urls")
    op.drop_index(op.f("ix_jobs_failed"), table_name="jobs")
    op.drop_index(op.f("ix_jobs_delayed_until"), table_name="jobs")
    op.drop_index(op.f("ix_jobs_created_at"), table_name="jobs")
    op.drop_index(op.f("ix_jobs_completed"), table_name="jobs")
    op.drop_index(op.f("ix_batches_created_at"), table_name="batches")
    op.drop_index(
        op.f("ix_batch_tag_batches_batch_tag_id"), table_name="batch_tag_batches"
    )
    op.drop_index(op.f("ix_batch_tag_batches_batch_id"), table_name="batch_tag_batches")
    op.drop_table("batch_tag_batches")
    op.drop_index(op.f("ix_batch_tags_name"), table_name="batch_tags")
    op.drop_table("batch_tags")
    # ### end Alembic commands ###
